{"ast":null,"code":"\"use strict\";\n\nvar vendor = require('postcss').vendor;\n\nvar Declaration = require('./declaration');\n\nvar Resolution = require('./resolution');\n\nvar Transition = require('./transition');\n\nvar Processor = require('./processor');\n\nvar Supports = require('./supports');\n\nvar Browsers = require('./browsers');\n\nvar Selector = require('./selector');\n\nvar AtRule = require('./at-rule');\n\nvar Value = require('./value');\n\nvar utils = require('./utils');\n\nSelector.hack(require('./hacks/fullscreen'));\nSelector.hack(require('./hacks/placeholder'));\nDeclaration.hack(require('./hacks/flex'));\nDeclaration.hack(require('./hacks/order'));\nDeclaration.hack(require('./hacks/filter'));\nDeclaration.hack(require('./hacks/grid-end'));\nDeclaration.hack(require('./hacks/animation'));\nDeclaration.hack(require('./hacks/flex-flow'));\nDeclaration.hack(require('./hacks/flex-grow'));\nDeclaration.hack(require('./hacks/flex-wrap'));\nDeclaration.hack(require('./hacks/grid-area'));\nDeclaration.hack(require('./hacks/place-self'));\nDeclaration.hack(require('./hacks/grid-start'));\nDeclaration.hack(require('./hacks/align-self'));\nDeclaration.hack(require('./hacks/appearance'));\nDeclaration.hack(require('./hacks/flex-basis'));\nDeclaration.hack(require('./hacks/mask-border'));\nDeclaration.hack(require('./hacks/mask-composite'));\nDeclaration.hack(require('./hacks/align-items'));\nDeclaration.hack(require('./hacks/flex-shrink'));\nDeclaration.hack(require('./hacks/break-props'));\nDeclaration.hack(require('./hacks/color-adjust'));\nDeclaration.hack(require('./hacks/writing-mode'));\nDeclaration.hack(require('./hacks/border-image'));\nDeclaration.hack(require('./hacks/align-content'));\nDeclaration.hack(require('./hacks/border-radius'));\nDeclaration.hack(require('./hacks/block-logical'));\nDeclaration.hack(require('./hacks/grid-template'));\nDeclaration.hack(require('./hacks/inline-logical'));\nDeclaration.hack(require('./hacks/grid-row-align'));\nDeclaration.hack(require('./hacks/transform-decl'));\nDeclaration.hack(require('./hacks/flex-direction'));\nDeclaration.hack(require('./hacks/image-rendering'));\nDeclaration.hack(require('./hacks/backdrop-filter'));\nDeclaration.hack(require('./hacks/background-clip'));\nDeclaration.hack(require('./hacks/text-decoration'));\nDeclaration.hack(require('./hacks/justify-content'));\nDeclaration.hack(require('./hacks/background-size'));\nDeclaration.hack(require('./hacks/grid-row-column'));\nDeclaration.hack(require('./hacks/grid-rows-columns'));\nDeclaration.hack(require('./hacks/grid-column-align'));\nDeclaration.hack(require('./hacks/overscroll-behavior'));\nDeclaration.hack(require('./hacks/grid-template-areas'));\nDeclaration.hack(require('./hacks/text-emphasis-position'));\nDeclaration.hack(require('./hacks/text-decoration-skip-ink'));\nValue.hack(require('./hacks/gradient'));\nValue.hack(require('./hacks/intrinsic'));\nValue.hack(require('./hacks/pixelated'));\nValue.hack(require('./hacks/image-set'));\nValue.hack(require('./hacks/cross-fade'));\nValue.hack(require('./hacks/display-flex'));\nValue.hack(require('./hacks/display-grid'));\nValue.hack(require('./hacks/filter-value'));\nvar declsCache = {};\n\nvar Prefixes =\n/*#__PURE__*/\nfunction () {\n  function Prefixes(data, browsers, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.data = data;\n    this.browsers = browsers;\n    this.options = options;\n\n    var _this$preprocess = this.preprocess(this.select(this.data));\n\n    this.add = _this$preprocess[0];\n    this.remove = _this$preprocess[1];\n    this.transition = new Transition(this);\n    this.processor = new Processor(this);\n  }\n  /**\n     * Return clone instance to remove all prefixes\n     */\n\n\n  var _proto = Prefixes.prototype;\n\n  _proto.cleaner = function cleaner() {\n    if (this.cleanerCache) {\n      return this.cleanerCache;\n    }\n\n    if (this.browsers.selected.length) {\n      var empty = new Browsers(this.browsers.data, []);\n      this.cleanerCache = new Prefixes(this.data, empty, this.options);\n    } else {\n      return this;\n    }\n\n    return this.cleanerCache;\n  }\n  /**\n     * Select prefixes from data, which is necessary for selected browsers\n     */\n  ;\n\n  _proto.select = function select(list) {\n    var _this = this;\n\n    var selected = {\n      add: {},\n      remove: {}\n    };\n\n    var _loop = function _loop(name) {\n      var data = list[name];\n      var add = data.browsers.map(function (i) {\n        var params = i.split(' ');\n        return {\n          browser: params[0] + \" \" + params[1],\n          note: params[2]\n        };\n      });\n      var notes = add.filter(function (i) {\n        return i.note;\n      }).map(function (i) {\n        return _this.browsers.prefix(i.browser) + \" \" + i.note;\n      });\n      notes = utils.uniq(notes);\n      add = add.filter(function (i) {\n        return _this.browsers.isSelected(i.browser);\n      }).map(function (i) {\n        var prefix = _this.browsers.prefix(i.browser);\n\n        if (i.note) {\n          return prefix + \" \" + i.note;\n        } else {\n          return prefix;\n        }\n      });\n      add = _this.sort(utils.uniq(add));\n\n      if (_this.options.flexbox === 'no-2009') {\n        add = add.filter(function (i) {\n          return i.indexOf('2009') === -1;\n        });\n      }\n\n      var all = data.browsers.map(function (i) {\n        return _this.browsers.prefix(i);\n      });\n\n      if (data.mistakes) {\n        all = all.concat(data.mistakes);\n      }\n\n      all = all.concat(notes);\n      all = utils.uniq(all);\n\n      if (add.length) {\n        selected.add[name] = add;\n\n        if (add.length < all.length) {\n          selected.remove[name] = all.filter(function (i) {\n            return add.indexOf(i) === -1;\n          });\n        }\n      } else {\n        selected.remove[name] = all;\n      }\n    };\n\n    for (var name in list) {\n      _loop(name);\n    }\n\n    return selected;\n  }\n  /**\n     * Sort vendor prefixes\n     */\n  ;\n\n  _proto.sort = function sort(prefixes) {\n    return prefixes.sort(function (a, b) {\n      var aLength = utils.removeNote(a).length;\n      var bLength = utils.removeNote(b).length;\n\n      if (aLength === bLength) {\n        return b.length - a.length;\n      } else {\n        return bLength - aLength;\n      }\n    });\n  }\n  /**\n     * Cache prefixes data to fast CSS processing\n     */\n  ;\n\n  _proto.preprocess = function preprocess(selected) {\n    var add = {\n      'selectors': [],\n      '@supports': new Supports(Prefixes, this)\n    };\n\n    for (var name in selected.add) {\n      var prefixes = selected.add[name];\n\n      if (name === '@keyframes' || name === '@viewport') {\n        add[name] = new AtRule(name, prefixes, this);\n      } else if (name === '@resolution') {\n        add[name] = new Resolution(name, prefixes, this);\n      } else if (this.data[name].selector) {\n        add.selectors.push(Selector.load(name, prefixes, this));\n      } else {\n        var props = this.data[name].props;\n\n        if (props) {\n          var value = Value.load(name, prefixes, this);\n\n          for (var _iterator = props, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n            var _ref;\n\n            if (_isArray) {\n              if (_i >= _iterator.length) break;\n              _ref = _iterator[_i++];\n            } else {\n              _i = _iterator.next();\n              if (_i.done) break;\n              _ref = _i.value;\n            }\n\n            var prop = _ref;\n\n            if (!add[prop]) {\n              add[prop] = {\n                values: []\n              };\n            }\n\n            add[prop].values.push(value);\n          }\n        } else {\n          var values = add[name] && add[name].values || [];\n          add[name] = Declaration.load(name, prefixes, this);\n          add[name].values = values;\n        }\n      }\n    }\n\n    var remove = {\n      selectors: []\n    };\n\n    for (var _name in selected.remove) {\n      var _prefixes = selected.remove[_name];\n\n      if (this.data[_name].selector) {\n        var selector = Selector.load(_name, _prefixes);\n\n        for (var _iterator2 = _prefixes, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n          var _ref2;\n\n          if (_isArray2) {\n            if (_i2 >= _iterator2.length) break;\n            _ref2 = _iterator2[_i2++];\n          } else {\n            _i2 = _iterator2.next();\n            if (_i2.done) break;\n            _ref2 = _i2.value;\n          }\n\n          var prefix = _ref2;\n          remove.selectors.push(selector.old(prefix));\n        }\n      } else if (_name === '@keyframes' || _name === '@viewport') {\n        for (var _iterator3 = _prefixes, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n          var _ref3;\n\n          if (_isArray3) {\n            if (_i3 >= _iterator3.length) break;\n            _ref3 = _iterator3[_i3++];\n          } else {\n            _i3 = _iterator3.next();\n            if (_i3.done) break;\n            _ref3 = _i3.value;\n          }\n\n          var _prefix = _ref3;\n\n          var prefixed = \"@\" + _prefix + _name.slice(1);\n\n          remove[prefixed] = {\n            remove: true\n          };\n        }\n      } else if (_name === '@resolution') {\n        remove[_name] = new Resolution(_name, _prefixes, this);\n      } else {\n        var _props = this.data[_name].props;\n\n        if (_props) {\n          var _value = Value.load(_name, [], this);\n\n          for (var _iterator4 = _prefixes, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n            var _ref4;\n\n            if (_isArray4) {\n              if (_i4 >= _iterator4.length) break;\n              _ref4 = _iterator4[_i4++];\n            } else {\n              _i4 = _iterator4.next();\n              if (_i4.done) break;\n              _ref4 = _i4.value;\n            }\n\n            var _prefix2 = _ref4;\n\n            var old = _value.old(_prefix2);\n\n            if (old) {\n              for (var _iterator5 = _props, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n                var _ref5;\n\n                if (_isArray5) {\n                  if (_i5 >= _iterator5.length) break;\n                  _ref5 = _iterator5[_i5++];\n                } else {\n                  _i5 = _iterator5.next();\n                  if (_i5.done) break;\n                  _ref5 = _i5.value;\n                }\n\n                var _prop = _ref5;\n\n                if (!remove[_prop]) {\n                  remove[_prop] = {};\n                }\n\n                if (!remove[_prop].values) {\n                  remove[_prop].values = [];\n                }\n\n                remove[_prop].values.push(old);\n              }\n            }\n          }\n        } else {\n          for (var _iterator6 = _prefixes, _isArray6 = Array.isArray(_iterator6), _i6 = 0, _iterator6 = _isArray6 ? _iterator6 : _iterator6[Symbol.iterator]();;) {\n            var _ref6;\n\n            if (_isArray6) {\n              if (_i6 >= _iterator6.length) break;\n              _ref6 = _iterator6[_i6++];\n            } else {\n              _i6 = _iterator6.next();\n              if (_i6.done) break;\n              _ref6 = _i6.value;\n            }\n\n            var _prefix3 = _ref6;\n            var olds = this.decl(_name).old(_name, _prefix3);\n\n            if (_name === 'align-self') {\n              var a = add[_name] && add[_name].prefixes;\n\n              if (a) {\n                if (_prefix3 === '-webkit- 2009' && a.indexOf('-webkit-') !== -1) {\n                  continue;\n                } else if (_prefix3 === '-webkit-' && a.indexOf('-webkit- 2009') !== -1) {\n                  continue;\n                }\n              }\n            }\n\n            for (var _iterator7 = olds, _isArray7 = Array.isArray(_iterator7), _i7 = 0, _iterator7 = _isArray7 ? _iterator7 : _iterator7[Symbol.iterator]();;) {\n              var _ref7;\n\n              if (_isArray7) {\n                if (_i7 >= _iterator7.length) break;\n                _ref7 = _iterator7[_i7++];\n              } else {\n                _i7 = _iterator7.next();\n                if (_i7.done) break;\n                _ref7 = _i7.value;\n              }\n\n              var _prefixed = _ref7;\n\n              if (!remove[_prefixed]) {\n                remove[_prefixed] = {};\n              }\n\n              remove[_prefixed].remove = true;\n            }\n          }\n        }\n      }\n    }\n\n    return [add, remove];\n  }\n  /**\n     * Declaration loader with caching\n     */\n  ;\n\n  _proto.decl = function decl(prop) {\n    var decl = declsCache[prop];\n\n    if (decl) {\n      return decl;\n    } else {\n      declsCache[prop] = Declaration.load(prop);\n      return declsCache[prop];\n    }\n  }\n  /**\n     * Return unprefixed version of property\n     */\n  ;\n\n  _proto.unprefixed = function unprefixed(prop) {\n    var value = this.normalize(vendor.unprefixed(prop));\n\n    if (value === 'flex-direction') {\n      value = 'flex-flow';\n    }\n\n    return value;\n  }\n  /**\n     * Normalize prefix for remover\n     */\n  ;\n\n  _proto.normalize = function normalize(prop) {\n    return this.decl(prop).normalize(prop);\n  }\n  /**\n     * Return prefixed version of property\n     */\n  ;\n\n  _proto.prefixed = function prefixed(prop, prefix) {\n    prop = vendor.unprefixed(prop);\n    return this.decl(prop).prefixed(prop, prefix);\n  }\n  /**\n     * Return values, which must be prefixed in selected property\n     */\n  ;\n\n  _proto.values = function values(type, prop) {\n    var data = this[type];\n    var global = data['*'] && data['*'].values;\n    var values = data[prop] && data[prop].values;\n\n    if (global && values) {\n      return utils.uniq(global.concat(values));\n    } else {\n      return global || values || [];\n    }\n  }\n  /**\n     * Group declaration by unprefixed property to check them\n     */\n  ;\n\n  _proto.group = function group(decl) {\n    var _this2 = this;\n\n    var rule = decl.parent;\n    var index = rule.index(decl);\n    var length = rule.nodes.length;\n    var unprefixed = this.unprefixed(decl.prop);\n\n    var checker = function checker(step, callback) {\n      index += step;\n\n      while (index >= 0 && index < length) {\n        var other = rule.nodes[index];\n\n        if (other.type === 'decl') {\n          if (step === -1 && other.prop === unprefixed) {\n            if (!Browsers.withPrefix(other.value)) {\n              break;\n            }\n          }\n\n          if (_this2.unprefixed(other.prop) !== unprefixed) {\n            break;\n          } else if (callback(other) === true) {\n            return true;\n          }\n\n          if (step === +1 && other.prop === unprefixed) {\n            if (!Browsers.withPrefix(other.value)) {\n              break;\n            }\n          }\n        }\n\n        index += step;\n      }\n\n      return false;\n    };\n\n    return {\n      up: function up(callback) {\n        return checker(-1, callback);\n      },\n      down: function down(callback) {\n        return checker(+1, callback);\n      }\n    };\n  };\n\n  return Prefixes;\n}();\n\nmodule.exports = Prefixes;","map":null,"metadata":{},"sourceType":"script"}
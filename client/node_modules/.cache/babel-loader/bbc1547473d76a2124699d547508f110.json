{"ast":null,"code":"import rootReducer from \"../reducers\";\nimport { createBrowserHistory } from 'history'; // import our logger for redux\n\nimport { createLogger } from 'redux-logger'; // import a library to handle async with redux\n\nimport thunk from 'redux-thunk'; // import the redux parts needed to start our store\n\nimport { createStore, applyMiddleware, compose } from 'redux'; // import the middleware for using react router with redux\n\nimport { routerMiddleware } from 'react-router-redux'; // create history\n\nexport var history = createBrowserHistory(); // combine the middlewares we're using into a constant so that it can be used by our store\n\nvar middleware = [thunk, routerMiddleware(history)]; // declare any enhancers here\n\nvar enhancers = []; // use Redux devtools if available in development\n\nif (process.env.NODE_ENV === 'development') {\n  var devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension());\n  }\n\n  middleware.push(createLogger());\n} // compose our middleware\n\n\nvar composedEnhancers = compose.apply(void 0, [applyMiddleware.apply(void 0, middleware)].concat(enhancers)); // create our redux store using our reducers and our middleware, and export it for use in index.js\n\nvar store = createStore(rootReducer, composedEnhancers);\nexport default store;","map":{"version":3,"sources":["/Users/philiphultgren/projects/project-admin/client/src/state/store/index.js"],"names":["rootReducer","createBrowserHistory","createLogger","thunk","createStore","applyMiddleware","compose","routerMiddleware","history","middleware","enhancers","process","env","NODE_ENV","devToolsExtension","window","__REDUX_DEVTOOLS_EXTENSION__","push","composedEnhancers","store"],"mappings":"AAAA,OAAOA,WAAP;AAEA,SAASC,oBAAT,QAAqC,SAArC,C,CACA;;AACA,SAASC,YAAT,QAA6B,cAA7B,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAEA;;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD,C,CAEA;;AACA,SAASC,gBAAT,QAAiC,oBAAjC,C,CAEA;;AACA,OAAO,IAAMC,OAAO,GAAGP,oBAAoB,EAApC,C,CAEP;;AACA,IAAMQ,UAAU,GAAG,CAACN,KAAD,EAAQI,gBAAgB,CAACC,OAAD,CAAxB,CAAnB,C,CAEA;;AACA,IAAME,SAAS,GAAG,EAAlB,C,CAEA;;AACA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1C,MAAMC,iBAAiB,GAAGC,MAAM,CAACC,4BAAjC;;AAEA,MAAI,OAAOF,iBAAP,KAA6B,UAAjC,EAA6C;AAC3CJ,IAAAA,SAAS,CAACO,IAAV,CAAeH,iBAAiB,EAAhC;AACD;;AAEDL,EAAAA,UAAU,CAACQ,IAAX,CAAgBf,YAAY,EAA5B;AACD,C,CAED;;;AACA,IAAMgB,iBAAiB,GAAGZ,OAAO,MAAP,UACxBD,eAAe,MAAf,SAAmBI,UAAnB,CADwB,SAErBC,SAFqB,EAA1B,C,CAKA;;AACA,IAAMS,KAAK,GAAGf,WAAW,CAACJ,WAAD,EAAckB,iBAAd,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import rootReducer from 'state/reducers';\n\nimport { createBrowserHistory } from 'history';\n// import our logger for redux\nimport { createLogger } from 'redux-logger';\n\n// import a library to handle async with redux\nimport thunk from 'redux-thunk';\n\n// import the redux parts needed to start our store\nimport { createStore, applyMiddleware, compose } from 'redux';\n\n// import the middleware for using react router with redux\nimport { routerMiddleware } from 'react-router-redux';\n\n// create history\nexport const history = createBrowserHistory();\n\n// combine the middlewares we're using into a constant so that it can be used by our store\nconst middleware = [thunk, routerMiddleware(history)];\n\n// declare any enhancers here\nconst enhancers = [];\n\n// use Redux devtools if available in development\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension());\n  }\n\n  middleware.push(createLogger());\n}\n\n// compose our middleware\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers\n);\n\n// create our redux store using our reducers and our middleware, and export it for use in index.js\nconst store = createStore(rootReducer, composedEnhancers);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}